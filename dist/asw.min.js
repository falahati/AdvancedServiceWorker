var AdvancedServiceWorker;(function(n){class t{constructor(n){this.url=null;this.header=null;Object.assign(this,n||{});this.url&&(typeof this.url=="string"||this.url instanceof String)&&(this.url=t.wildCardToRegEx(this.url));this.header&&(typeof this.header=="string"||this.header instanceof String)&&(this.header=t.wildCardToRegEx(this.header))}static getRelativeUrl(n){return(n.indexOf("http://")===0||n.indexOf("https://")===0)&&n.indexOf("/",8)!==-1&&(n=n.substr(n.indexOf("/",8))),n}doesMatch(n){if(this.url&&(!n.url||!this.url.test(t.getRelativeUrl(n.url))))return!1;if(this.header){if(!n.headers)return!1;let t=!1;for(let n of n.headers.entries()){const i=n[0]+": "+n[1];if(this.header.test(i)){t=!0;break}}if(!t)return!1}return!0}static wildCardToRegEx(n){return new RegExp(`^${n.split("*").join(".*")}$`)}}n.Condition=t})(AdvancedServiceWorker||(AdvancedServiceWorker={})),function(n){let t;(function(n){n.Disable="DISABLE";n.CacheFirst="CACHE_FIRST";n.NetworkFirst="NETWORK_FIRST";n.CacheOnly="CACHE_ONLY";n.NetworkOnly="NETWORK_ONLY";n.Race="RACE"})(t=n.Strategies||(n.Strategies={}))}(AdvancedServiceWorker||(AdvancedServiceWorker={})),function(n){class t{constructor(t){this.conditions=[];this.strategy=n.Strategies.Disable;this.offline=null;this.networkTimeout=3e3;Object.assign(this,t||{});for(let t=0;t<this.conditions.length;t++)this.conditions[t]=new n.Condition(this.conditions[t])}doesMatch(n){for(let t=0;t<this.conditions.length;t++)if(this.conditions[t].doesMatch(n))return!0;return!1}}n.Rule=t}(AdvancedServiceWorker||(AdvancedServiceWorker={})),function(n){class t{constructor(t){this.version=0;this.storageName="offline-cache";this.preload=[];this.scope="/";this.filePath="/asw.js";this.persistent=!1;this.pushServerAddress="";this.pushServerKey=null;this.pushUserVisibleOnly=!0;this.debug=!1;this.rules=[];Object.assign(this,t||{});for(let t=0;t<this.rules.length;t++)this.rules[t].offline&&this.preload.indexOf(this.rules[t].offline)===-1&&this.preload.push(this.rules[t].offline),this.rules[t]=new n.Rule(this.rules[t])}}n.Options=t}(AdvancedServiceWorker||(AdvancedServiceWorker={})),function(n){let t;(function(n){n.Notification="NOTIFICATION";n.ClearCache="CLEAECACHE";n.Preload="PRELOAD";n.Reload="RELOAD";n.Broadcast="BROADCAST"})(t=n.ActionTypes||(n.ActionTypes={}))}(AdvancedServiceWorker||(AdvancedServiceWorker={})),function(n){class t{constructor(n){this.actionType=n}}n.Action=t}(AdvancedServiceWorker||(AdvancedServiceWorker={})),function(n){class t{constructor(n,t){this.scope=n;this.data=typeof t=="undefined"?null:t}equal(n){return this.scope===n.scope&&JSON.stringify(this)===JSON.stringify(n)}}n.Message=t}(AdvancedServiceWorker||(AdvancedServiceWorker={})),function(n){class t extends n.Message{constructor(n,t){super(n,t)}}n.RequestMessage=t}(AdvancedServiceWorker||(AdvancedServiceWorker={})),function(n){class t extends n.Message{constructor(n,t,i){super(n,i);this.request=t}}n.ResponseMessage=t}(AdvancedServiceWorker||(AdvancedServiceWorker={})),function(n){var t;(function(t){class i extends n.Action{constructor(t){super(n.ActionTypes.Broadcast);this.message=t}}t.Broadcast=i})(t=n.Actions||(n.Actions={}))}(AdvancedServiceWorker||(AdvancedServiceWorker={})),function(n){var t;(function(t){class i extends n.Action{constructor(t){super(n.ActionTypes.ClearCache);this.condition=t||null}}t.ClearCache=i})(t=n.Actions||(n.Actions={}))}(AdvancedServiceWorker||(AdvancedServiceWorker={})),function(n){var t;(function(t){class i extends n.Action{constructor(t,i,r){super(n.ActionTypes.Notification);this.title=t;this.options=i||{};this.options.data=Object.assign(this.options.data||{},{url:r})}}t.Notification=i})(t=n.Actions||(n.Actions={}))}(AdvancedServiceWorker||(AdvancedServiceWorker={})),function(n){var t;(function(t){class i extends n.Action{constructor(t){super(n.ActionTypes.Preload);this.urls=t}}t.Preload=i})(t=n.Actions||(n.Actions={}))}(AdvancedServiceWorker||(AdvancedServiceWorker={})),function(n){class t{static getIdb(n,t){return new Promise((n,t)=>{const i=indexedDB.open(this.databaseName,1);i.onerror=()=>t(i.error);i.onsuccess=()=>n(i.result);i.onupgradeneeded=()=>{i.result.createObjectStore(this.storeName)}}).then(i=>new Promise((r,u)=>{const f=i.transaction(this.storeName,n);f.oncomplete=()=>r();f.onabort=f.onerror=()=>u(f.error);t(f.objectStore(this.storeName))}))}static saveOptions(i){const r=n.Condition.getRelativeUrl(i.scope);return t.getIdb("readwrite",n=>{n.put(i,r)}).then(()=>!0,n=>console.log(n),!1)}static loadOptions(i){i=n.Condition.getRelativeUrl(i);let r;return t.getIdb("readonly",n=>{r=n.get(i)}).then(()=>r.result,()=>null)}}t.databaseName="advanced-service-worker";t.storeName="keyval";n.BrowserDatabase=t}(AdvancedServiceWorker||(AdvancedServiceWorker={})),function(n){class t{constructor(n,t){t&&(n+=`-v${t}`);this.storageName=n}open(){return caches.open(this.storageName)}remove(t){return t?typeof t=="string"||t instanceof String||t instanceof RegExp?(t instanceof RegExp||(t=n.Condition.wildCardToRegEx(t)),this.open().then(n=>n.keys().then(i=>{const r=[];return(i.forEach(i=>{i.url&&t.test(i.url)&&r.push(n.delete(i))}),!r.length)?Promise.resolve(!1):Promise.all(r).then(n=>{for(let t=0;t<n.length;t++)if(n[t])return!0;return!1},()=>!1)}))):t instanceof Array&&t.length?this.open().then(n=>{const i=[];for(let r=0;r<t.length;r++)i.push(n.delete(t[r]));return Promise.all(i).then(n=>{for(let t=0;t<n.length;t++)if(n[t])return!0;return!1},()=>!1)}):Promise.resolve(!1):caches.delete(this.storageName)}preloadUrls(n){return n?this.open().then(t=>t.addAll(n).then(()=>!0,()=>console.error("Failed to add preload pages to cache."),!1),()=>console.error("Failed to open cache."),!1):Promise.resolve(!1)}putResponse(n,t){if(!t)throw new Error("Can not add an empty response to cache.");return t.status!==200&&t.status!==204&&t.status!==300&&t.status!==301&&t.status!==303&&t.status!==308?Promise.resolve():this.open().then(i=>i.put(n,t))}getResponse(n){return this.open().then(t=>t.match(n).then(n=>{if(n)return n;throw new Error("Cache contains empty response.");}))}}n.BrowserCache=t}(AdvancedServiceWorker||(AdvancedServiceWorker={})),function(n){class t{constructor(i){this.options=new n.Options(i);this.eventElement=document.createElement("eventElement");t.addGlobalEventListener("message",n=>{var t=n.detail.data;t.scope===this.options.scope&&this.eventElement.dispatchEvent(new CustomEvent("message",{detail:t.data}))})}static addGlobalEventListener(n,i,r){t.staticEventElement.addEventListener(n,i,r)}addEventListener(n,t,i){this.eventElement.addEventListener(n,t,i)}postMessage(i){return new Promise((r,u)=>{t.isInstalled()||u(new Error("Service worker is not installed."));const f=new n.RequestMessage(this.options.scope,i),e=new MessageChannel;e.port1.onmessage=n=>{const t=n.data;t.scope===this.options.scope&&t.request&&f.equal(t.request)&&r(t.data)};self.navigator.serviceWorker.controller.postMessage(f,[e.port2]);setTimeout(()=>{u(new Error("Response timeout."))},100)})}showNotification(t,i,r){return this.postMessage(new n.Actions.Notification(t,i,r))}reload(){return this.postMessage(new n.Action(n.ActionTypes.Reload))}clearCache(t){return this.postMessage(new n.Actions.ClearCache(t))}preload(t){return this.postMessage(new n.Actions.Preload(t))}broadcast(t){return this.postMessage(new n.Actions.Broadcast(t))}ensureInstalled(){if(!t.isSupported())return console.error("Service workers are not supported."),Promise.resolve(!1);var i=this.options.filePath;return this.options.version&&(i=i+"?v="+this.options.version),n.BrowserDatabase.loadOptions(this.options.scope).then(t=>{const r=!!self.navigator.serviceWorker.controller,u=r&&(!t||JSON.stringify(t)!==JSON.stringify(this.options));if(r&&!u)console.debug("Active service worker found, no need to register.");else return n.BrowserDatabase.saveOptions(this.options).then(()=>navigator.serviceWorker.register(i,{scope:this.options.scope}).then(n=>(console.info(`Service worker has been registered for scope: ${n.scope}`),u)?n.update().then(()=>this.reload(),console.info("Service worker has been updated."),!0):!0)).catch(()=>console.error("Failed to register or update the service worker."),!1);return!1})}static isSupported(){return"serviceWorker"in self.navigator&&"storage"in self.navigator}static isInstalled(){return t.isSupported&&!!self.navigator.serviceWorker.controller}}t.staticConstructor=(()=>{t.isSupported&&"document"in self&&(t.staticEventElement=document.createElement("eventElement"),self.navigator.serviceWorker.addEventListener("message",n=>{t.staticEventElement.dispatchEvent(new CustomEvent("message",{detail:n}))}),self.navigator.serviceWorker.addEventListener("controllerchange",n=>{t.staticEventElement.dispatchEvent(new CustomEvent("controllerchange",{detail:n}))}),self.navigator.serviceWorker.addEventListener("messageerror",n=>{t.staticEventElement.dispatchEvent(new CustomEvent("messageerror",{detail:n}))}))})();n.Controller=t}(AdvancedServiceWorker||(AdvancedServiceWorker={})),function(n){class t{constructor(n,t,i){this.messages=[];this.response=null;this.request=n;this.rule=t;this.cache=i}message(n){this.messages.push(n)}wasSuccessful(){return!!this.response}end(n,t){return this.message(n),this.wasSuccessful()||(this.response=t||null,this.message("End of operation.")),this.response}fatal(n){const t=new Error(n);return this.message(`Operation failed. ${t}`),this.message(`Trying native fetch as the last resort.`),this.response=null,fetch(this.request)}getResponse(){switch(this.rule.strategy){case n.Strategies.NetworkFirst:return this.strategyNetworkFirst();case n.Strategies.CacheFirst:return this.strategyCacheFirst();case n.Strategies.NetworkOnly:return this.strategyNetworkOnly();case n.Strategies.CacheOnly:return this.strategyCacheOnly();case n.Strategies.Race:return this.strategyRace();case n.Strategies.Disable:return this.end("Disabled"),null}return null}strategyNetworkFirst(){return this.getLive(this.request).then(n=>this.message("Fetched from network."),this.cache.putResponse(this.request,n.clone()).then(()=>this.end("Saved to cache.",n),t=>this.end(`Failed to save to cache. ${t.toString()}`,n)),n=>this.message(`Network failed, switching to cache. ${n.toString()}`),this.cache.getResponse(this.request).then(n=>this.end("Fetched from cache.",n),n=>(this.message(`Cache failed, switching to offline page. ${n.toString()}`),!this.rule.offline)?this.fatal("Missing offline page."):this.cache.getResponse(this.rule.offline).then(n=>this.end("Offline page served.",n),n=>this.fatal(`Cache failed for offline page. ${n.toString()}`))))}strategyCacheFirst(){return this.cache.getResponse(this.request).then(n=>this.end("Fetched from cache.",n),n=>this.message(`Cache failed, switching to network. ${n.toString()}`),this.getLive(this.request).then(n=>this.message("Fetched from network."),this.cache.putResponse(this.request,n.clone()).then(()=>this.end("Saved to cache.",n),t=>this.end(`Failed to save to cache. ${t.toString()}`,n)),n=>(this.message(`Network failed, switching to offline page. ${n.toString()}`),!this.rule.offline)?this.fatal("Missing offline page."):this.cache.getResponse(this.rule.offline).then(n=>this.end("Offline page served.",n),n=>this.fatal(`Cache failed for offline page. ${n.toString()}`))))}strategyNetworkOnly(){return this.getLive(this.request).then(n=>this.end("Fetched from network.",n),n=>(this.message(`Network failed, switching to offline page. ${n.toString()}`),!this.rule.offline)?this.fatal("Missing offline page."):this.cache.getResponse(this.rule.offline).then(n=>this.end("Offline page served.",n),n=>this.fatal(`Cache failed for offline page. ${n.toString()}`)))}strategyCacheOnly(){return this.cache.getResponse(this.request).then(n=>this.end("Fetched from cache.",n),n=>(this.message(`Cache failed, switching to offline page. ${n.toString()}`),!this.rule.offline)?this.fatal("Missing offline page."):this.cache.getResponse(this.rule.offline).then(n=>this.end("Offline page served.",n),n=>this.fatal(`Cache failed for offline page. ${n.toString()}`))).catch(()=>fetch(this.request))}strategyRace(){var n=this.getLive(this.request).then(n=>this.message("Fetched from network."),this.cache.putResponse(this.request,n.clone()).then(()=>this.end("Saved to cache.",n),t=>this.end(`Failed to save to cache. ${t.toString()}`,n))),t=this.rule.networkTimeout<=0?Promise.resolve({}):new Promise(n=>{setTimeout(()=>{this.message(`Network delay reached, trying cache...`),n()},this.rule.networkTimeout)});return new Promise((i,r)=>{var u=0;n.then(i,n=>{u++,u>=2?r(n):this.cache.getResponse(this.request).then(n=>i(this.end("Fetched from cache.",n)),r)});t.then(()=>this.cache.getResponse(this.request).then(n=>i(this.end("Fetched from cache.",n)),n=>{u++,u>=2&&r(n)}))}).catch(n=>(this.message(`Race failed, switching to offline page. ${n.toString()}`),!this.rule.offline)?this.fatal("Missing offline page."):this.cache.getResponse(this.rule.offline).then(n=>this.end("Offline page served.",n),n=>this.fatal(`Cache failed for offline page. ${n.toString()}`)))}getLive(n){return fetch(n).then(n=>{if(!n)throw new Error("Network is not accessible.");if(n.status===408||n.status===500||n.status===502||n.status===503||n.status===504)throw new Error("Bad network response.");return n})}}n.FetchRequest=t}(AdvancedServiceWorker||(AdvancedServiceWorker={})),function(n){class t{constructor(){this.cachedOptions=null;self.addEventListener("activate",this.onActivate.bind(this));self.addEventListener("install",this.onInstall.bind(this));self.addEventListener("fetch",this.onFetch.bind(this));self.addEventListener("sync",this.onSync.bind(this));self.addEventListener("pushsubscriptionchange",this.onPushSubscriptionChange.bind(this));self.addEventListener("notificationclick",this.onNotificationClick.bind(this));self.addEventListener("push",this.onPush.bind(this));self.addEventListener("message",this.onMessage.bind(this))}onInstall(n){this.debug("Processing install event...",n);n.waitUntil(self.skipWaiting().then(this.reload.bind(this)))}onActivate(n){this.debug("Processing activate event...",n);n.waitUntil(this.getOptions().then(()=>{self.clients.claim()}))}onFetch(t){if(t.request&&t.request.method==="GET"&&t.request.url&&(t.request.url.indexOf("http://")===0||t.request.url.indexOf("https://")===0)){let i,r;t.waitUntil(this.getOptions().then(u=>this.getMatchedRule(t.request).then(f=>{if(f){const e=new n.BrowserCache(u.storageName,u.version);i=new n.FetchRequest(t.request,f,e);r=i.getResponse()}r?t.respondWith(r.then(n=>n&&i.wasSuccessful()?this.debug("Service worker intercepted the request: ",i):this.debug("Service worker failed to provide a response: ",i),n,n=>{this.debug("Request failed with unexpected error: ",i);throw n;})):this.debug("Request handled by the browser: ",i?i:t.request)})))}}onPush(n){if(n.data){const t=n.data.json();t&&n.waitUntil(this.processAction(t))}}onPushSubscriptionChange(n){this.debug("Push subscription changed: ",n);n.waitUntil(this.checkPushServiceStatus(!0))}onNotificationClick(n){this.debug("Notification clicked: ",n.notification);n.notification.close();n.notification.data&&n.notification.data.url&&n.waitUntil(self.clients.matchAll({type:"window"}).then(t=>{for(let i=0;i<t.length;i++){const r=t[i];if(r.url===n.notification.data.url&&"focus"in r)return r.focus()}return self.clients.openWindow?self.clients.openWindow(n.notification.data.url):!1}))}onSync(n){this.debug("Sync request: ",n);n.waitUntil(this.reload())}onMessage(t){this.debug("New message recieved: ",t);t.waitUntil(this.getOptions().then(i=>{var r=t.data;return r.scope===i.scope?this.processAction(r.data).then(u=>{var f=new n.ResponseMessage(i.scope,r,JSON.parse(JSON.stringify(u)));t.ports[0].postMessage(f)}):Promise.resolve()}))}debug(n,...t){(!this.cachedOptions||this.cachedOptions.debug)&&console.debug(n,...t)}getOptions(t){return!t&&this.cachedOptions?Promise.resolve(this.cachedOptions):n.BrowserDatabase.loadOptions(self.registration.scope).then(t=>{if(this.cachedOptions=new n.Options(t),!this.cachedOptions)throw new Error("Missing service worker options in IndexedDB.");return this.cachedOptions})}processAction(t){if(t.actionType)switch(t.actionType){case n.ActionTypes.Notification:return this.showNotification(t.title,t.options);case n.ActionTypes.ClearCache:return this.getOptions().then(i=>new n.BrowserCache(i.storageName,i.version).remove(t.condition));case n.ActionTypes.Preload:return this.preload(t.urls);case n.ActionTypes.Broadcast:return this.broadcast(t.message);case n.ActionTypes.Reload:return this.reload()}return Promise.resolve(!1)}showNotification(n,t){return(this.debug("New notification: ",n,t),!n)?Promise.resolve(!1):self.registration.showNotification(n,t||{}).then(()=>!0).catch(n=>console.warn("Can not show notification: ",n),!1)}preload(t){return this.getOptions().then(i=>(t=t||i.preload,!t||t instanceof Array&&t.length===0)?Promise.resolve(!0):((typeof t=="string"||t instanceof String)&&(t=[t]),new n.BrowserCache(i.storageName,i.version).preloadUrls(t))).catch(()=>!1)}broadcast(t){return(this.debug("Broadcasting message: ",t),!t)?Promise.resolve(!1):this.getOptions().then(i=>self.clients.matchAll().then(r=>{if(r.length>0){for(let u=0;u<r.length;u++)r[u].postMessage(new n.Message(i.scope,t));return!0}return!1}))}reload(){return this.getOptions(!0).then(t=>Promise.all([this.preload(),this.checkPersistence(),this.checkPushServiceStatus(!1)]).then(()=>{this.debug(`Clear old caches... (< v${t.version})`);const i=[];for(let r=0;r<t.version;r++)i.push(new n.BrowserCache(t.storageName,r).remove());return Promise.all(i).then(()=>!0)})).catch(()=>!1)}checkPushServiceStatus(n){return this.getOptions().then(t=>{var i={userVisibleOnly:t.pushUserVisibleOnly,applicationServerKey:t.pushServerKey};return self.registration.pushManager.permissionState(i).then(r=>r==="granted"?self.registration.pushManager.getSubscription().then(r=>{(!r||n)&&t.pushServerAddress?self.registration.pushManager.subscribe(i).then(n=>{n?this.reportPushSubscriptionStatus(n).catch(()=>{console.warn("Failed to send subscription changes to the server.")}):console.warn("Push service subsription request denied.")}).catch(n=>{console.warn("Failed to subscribe from push service.",n)}):r&&!t.pushServerAddress&&self.registration.pushManager.unsubscribe().then(n=>{n?this.reportPushSubscriptionStatus(null).catch(()=>{console.warn("Failed to send subscription changes to the server.")}):console.warn("Push service unsubsription request denied.")}).catch(n=>{console.warn("Failed to unsubscribe from push service.",n)})}).catch(n=>{console.warn("Failed to get push service subscription status.",n)}):Promise.resolve()).catch(n=>{t.pushServerAddress?console.warn("Push service requests rejected: ",n):this.debug("Push service requests rejected: ",n)})})}reportPushSubscriptionStatus(n){return this.getOptions().then(t=>new Promise((i,r)=>{t.pushServerAddress||r();var u=new XMLHttpRequest;u.onload=()=>{u.status===200?i():r()};u.onerror=r;u.onabort=r;u.open("POST",t.pushServerAddress);u.setRequestHeader("Content-Type","application/json;charset=UTF-8");u.send(JSON.stringify(n))}))}checkPersistence(){return this.getOptions().then(n=>n.persistent&&self.navigator.storage&&self.navigator.storage.persist?self.navigator.storage.persisted().then(n=>n||self.navigator.storage.persist().catch(()=>console.warn("Failed to make storage persistance."),!1),!0):Promise.resolve(!n.persistent))}getMatchedRule(n){return this.getOptions().then(t=>{for(let i=0;i<t.rules.length;i++){const r=t.rules[i];if(r.doesMatch(n))return r}return null})}}t.staticConstructor=(()=>{if(typeof WorkerGlobalScope!="undefined"&&self instanceof WorkerGlobalScope)const n=new t})()}(AdvancedServiceWorker||(AdvancedServiceWorker={}));